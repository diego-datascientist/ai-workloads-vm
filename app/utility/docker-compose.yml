
services:
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: milvus-standalone-01
    image: milvusdb/milvus:v2.2.16
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"

  nemollm-embedding:
    container_name: nemo-retriever-embedding-microservice
    image: nvcr.io/nim/nvidia/nv-embedqa-e5-v5:1.0.1
    # volumes:
    # - ${MODEL_DIRECTORY}:/opt/nim/.cache
    ports:
    - "9080:8000"
    expose:
    - "8000"
    environment:
      NGC_API_KEY: ${NGC_API_KEY}
      PYTORCH_CUDA_ALLOC_CONF: "expandable_segments:True"
    user: "${USERID:-1000}"
    shm_size: 16GB
    deploy: 
      resources:
        reservations:
          devices:
            - driver: nvidia
              # device_ids: ['${EMBEDDING_MS_GPU_ID:-2}']
              # count: ${INFERENCE_GPU_COUNT:-all}
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/v1/health/ready"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 10m

  nemollm-inference:
    container_name: nemollm-inference-microservice
    image: nvcr.io/nim/meta/llama3-8b-instruct:1.0.3
    command: [
      "python3", 
      "-m", 
      "vllm_nvext.entrypoints.openai.api_server",
      "--model", "/opt/nim/.cache/model",
      "--dtype=half"
    ]
    volumes:
      - ${MODEL_DIRECTORY}:/opt/nim/.cache
    user: "${USERID:-1000}"
    ports:
      - "8000:8000"
    expose:
      - "8000"
    environment:
      NGC_API_KEY: ${NGC_API_KEY}
    shm_size: 20gb
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: ${INFERENCE_GPU_COUNT:-all}
              capabilities: [gpu]
        # limits:
        #   devices:
        #     - driver: nvidia
        #       count: 1
        #       capabilities: [gpu]
        #   memory: 12g  # Adjust based on available GPU memory
    healthcheck:
      test: ["CMD", "python3", "-c", "import requests; requests.get('http://localhost:8000/v1/health/ready')"]
      interval: 10s
      timeout: 20s
      retries: 100
  
  ranking-ms:
    container_name: nemo-retriever-ranking-microservice
    image: nvcr.io/nim/nvidia/nv-rerankqa-mistral-4b-v3:1.0.1
    # image: nvcr.io/nim/nvidia/llama-3.2-nv-rerankqa-1b-v2:latest
    volumes:
    - ${MODEL_DIRECTORY}:/opt/nim/.cache
    ports:
    - "1976:8000"
    expose:
    - "8000"
    environment:
      NGC_API_KEY: ${NGC_API_KEY}
      PYTORCH_CUDA_ALLOC_CONF: "expandable_segments:True"
    user: "${USERID:-1000}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 20s
      retries: 100
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              device_ids: ['${RANKING_MS_GPU_ID:-3}']
              # count: ${INFERENCE_GPU_COUNT:-all}
              capabilities: [gpu]
 

networks:
  default:
    name: milvus